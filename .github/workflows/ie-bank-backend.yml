name: app-backend-AGUADAMILLAS #UPDATE WITH YOUR STUDENT ALIAS

on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/ie-bank-backend.yml'

env:
  BACKEND_WEBAPP_DEV: #Exercise III: set the name of your web app

jobs:
  build:
    
    runs-on: ubuntu-latest
    env:
      ENV: ghci

    steps:
      # checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # set up Python 3.11.
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      # step to upgrade Pytyon pip. Consider using the `working-directory: ./backend` setting
      - name: Upgrade Python pip
        run: python -m pip install --upgrade pip
        working-directory: ./backend

      # install dependencies with pip. Consider using the `working-directory: ./backend` setting
      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: ./backend

      # Exercise III
      # install flake8 and pytest, and use flake8 to check code syntax. Consider using the `working-directory: ./backend` setting
      - name: Install flake8 and pytest
        run: |
          pip install flake8
          pip install pytest
        working-directory: ./backend

      - name: Check code syntax with flake8
        run: flake8
        working-directory: ./backend
      
      # Exercise III
      # run python tests with pytest. Consider using the `working-directory: ./backend` setting
      - name: Run pytest
        run: pytest
        working-directory: ./backend
      # upload the packaged code as a GitHub artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: backend


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Write download build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: backend
    
      #  Write step to login in to Azure. You can use the repository secret AZURE_CREDENTIALS
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # deploy the downloaded artifact to your Azure web app
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          package: ${{ github.workspace }}/backend
          slot-name: production
    