name: app-backend-sfischel #UPDATE WITH YOUR STUDENT ALIAS

on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/ie-bank-backend.yml'

env:
  BACKEND_WEBAPP_DEV: sfischel-be-dev


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENV: ghci

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Upgrade pip
      working-directory: ./backend
      run: |
          python -m pip install --upgrade pip

    - name: Install dependencies
      working-directory: ./backend
      run: |
            python -m pip install -r requirements.txt
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        pip install flask flask_sqlalchemy flask_cors
        pip install flake8 pytest
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./backend
      run: |

        # Run unit tests
        python -m pytest tests/unit -v

        # Run functional tests
        python -m pytest tests/functional -v

        # Generate coverage report
        python -m pytest --cov=iebank_api --cov-report=xml:coverage.xml

    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v2
      with:
        name: python-app
        path: ./backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Exercise IV
      # GitHub action: Write download build artifact
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: python-app
          path: .
    
      # Exercise IV
      # GitHub action: Write step to login in to Azure. You can use the repository secret AZURE_CREDENTIALS
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Exercise IV
      # GitHub action: Write step to deploy the downloaded artifact to your Azure web app
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}
          package: .
    