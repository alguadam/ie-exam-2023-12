name: app-backend-MarcChebli

on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/ie-bank-backend.yml'

env:
  BACKEND_WEBAPP_DEV: marcchebli-be-dev #Exercise III: set the name of your web app

jobs:
  build:
    
    runs-on: ubuntu-latest
    env:
      ENV: ghci

    steps:
      # Exercise III
      # GitHub action: Write step to checkout code.
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      # Exercise III
      # GitHub action: Write step to set up Python 3.11.

      # Exercise III
      # GitHub action: Write step to upgrade Pytyon pip. Consider using the `working-directory: ./backend` setting
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      # Exercise III
      # GitHub action: Write step to install dependencies with pip. Consider using the `working-directory: ./backend` setting
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
        working-directory: ./backend
      # Exercise III
      # GitHub action: Write step to install flake8 and pytest, and use flake8 to check code syntax. Consider using the `working-directory: ./backend` setting
      - name: Lint with flake8
        run: |
          pip install flake8 pytest
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        working-directory: ./backend
      # Exercise III
      # GitHub action: Write step to run python tests with pytest. Consider using the `working-directory: ./backend` setting
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
      # Exercise III
      # GitHub action: Write step upload the packaged code as a GitHub artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: marcbackend
          path: backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Exercise IV
      # GitHub action: Write download build artifact
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: marcbackend
      # Exercise IV
      # GitHub action: Write step to login in to Azure. You can use the repository secret AZURE_CREDENTIALS
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Exercise IV
      # GitHub action: Write step to deploy the downloaded artifact to your Azure web app
      - name: Deploy to webapp
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.BACKEND_WEBAPP_DEV }}